@mixin props ($prop, $attrs, $prefix: 0) {
    @if $prefix == 0 {
        $prefix: #{$prop}-
    }

    @each $attr, $attr1 in $attrs {
        @if $attr1 {
            .#{$prefix}#{$attr} {
                #{$prop}: $attr1
            }
        }
        @else {
            .#{$prefix}#{$attr} {
                #{$prop}: $attr 
            }
        }
    }
}

$position: relative, absolute, fixed;
@include props('position', $position, '');

$float: left, right, none;
@include props('float', $float);
.clearfix {
    zoom: 1;
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

$display: block, inline-block, inline, table, table-row, table-cell, (hidden, none!important);
@include props('display', $display, '');

$visibility: visible, hidden;
@include props('visibility', $visibility);

$textAlign: left, right, center;
@include props('text-align', $textAlign, 'text-');

$verticalAlign: baseline, top, middle, bottom, text-top, text-bottom;
@include props('vertical-align', $verticalAlign, 'align-');

$fontWeight: ('light', 300), ('normal', 400), ('medium', 500), ('semibold', 600), ('bold', 700);
@include props('font-weight', $fontWeight, 'font-');

$wordBreak: normal, break-word, break-all;
@include props('word-break', $wordBreak, 'break-');
.truncate {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@for $i from 1 to 11 {
    .m-#{$i*5} {
        margin: #{$i*5}px!important;
    }
    .mt-#{$i*5} {
        margin-top: #{$i*5}px!important;
    }
    .mb-#{$i*5} {
        margin-bottom: #{$i*5}px!important;
    }
    .ml-#{$i*5} {
        margin-left: #{$i*5}px!important;
    }
    .mr-#{$i*5} {
        margin-right: #{$i*5}px!important;
    }

    .p-#{$i*5} {
        padding: #{$i*5}px!important;
    }
    .pt-#{$i*5} {
        padding-top: #{$i*5}px!important;
    }
    .pb-#{$i*5} {
        padding-bottom: #{$i*5}px!important;
    }
    .pl-#{$i*5} {
        padding-left: #{$i*5}px!important;
    }
    .pr-#{$i*5} {
        padding-right: #{$i*5}px!important;
    }
}

// auto default pointer wait text move not-allowed
$cursor: default, pointer, not-allowed;
@include props('cursor', $cursor);

// @each $class, $color in $defineColor {
//   .bgc-#{$class} {
//     background: $color!important;
//   }

//   .text-#{$class} {
//     color: $color!important;
//   }
// }

// // 常用字号并对应颜色
// @each $class, $size, $color, $fontWeight in $defineFontSize {
//   .text-#{$class} {
//     font-size: #{$size}px;
//     color: $color;
//     @if ($fontWeight) {
//         font-weight: $fontWeight;
//     }
//   }
// }
// 以下都还没写到文档里面的

// 阴影
.shadow {
    box-shadow: 0px 2px 6px 0px rgba(16,35,69,0.09);
}

.border-radius-4 {
    border-radius: 4px;
}

// 边框，上下左右划线
$borderColor: #E5E5E5;
$borderPosition: top, bottom, left, right;
@for $i from 1 to 2 {
	@each $position in $borderPosition {
		.border-#{$position}-#{$i} {
			border-#{$position}: #{$i}px solid $borderColor;
		}
	}
	.border-#{$i} {
		border: #{$i}px solid $borderColor;
	}
}


.wh-full {
  width: 100%;
  height: 100%;
}

.w-full {
  width: 100%;
}

.h-full {
  height: 100%;
}

.minh-full {
  min-height: 100%;
}
